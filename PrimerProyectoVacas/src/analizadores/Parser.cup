// ------------  Paquete e importaciones ------------
package analizadores;

import java_cup.runtime.*;


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public String resultado = ""; 

    public void syntax_error(Symbol s)
    {
            System.err.println("Error Sintactico: ------>"+ s.value + "<------ Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
            System.err.println("Error Sintactico: -------->"+ s.value + "<-------- Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{:  :}


//------> Declaración de terminales
terminal String ENTERO, IDENTI, DECIMAL, CADENA;
terminal String RCONJ;
terminal String DOSPUNTOS, FLECHA, PTOCOMA, COMA;
terminal String TILDE, CONCA, DISYUNCION, CEROOMAS, UNOOMAS, CEROOUNA;
terminal String PARDER, PARIZQ, LLAVEDER, LLAVEIZQ;
terminal String GUION, BARRA;
terminal String DISTINTO,COMILLAD, NUMERAL, DOLAR, PORCENTAJE, AMPERSAND,COMILLAS;
terminal String MENOR, MAYOR, IGUAL, ARROBA, CORIZQ, CORDER;
terminal String ELEVADO, GUIONBAJO, ACENTO, BARRAINV; 


//------> Declaración de no terminales
non terminal inicio;
non terminal contenido;
non terminal sentencias, declaracion, conjunto, varconj, varcomauno, varcomados, exregular;
non terminal varcomatres, simbolo;
non terminal regular, expresion;


//------> Definir Simbolo Inicial
start with inicio; 


// ------------>  Producciones  <------------

inicio ::= LLAVEIZQ contenido LLAVEDER
;

contenido ::= sentencias
;

sentencias ::=  sentencias declaracion
                | declaracion
;

declaracion ::= conjunto
                | exregular
;

conjunto ::=    RCONJ DOSPUNTOS IDENTI FLECHA varconj PTOCOMA
;

varconj ::= IDENTI TILDE IDENTI
            |ENTERO GUION ENTERO
            |simbolo TILDE simbolo
            | varcomauno
            | varcomados
            | varcomatres
;

varcomauno ::=  varcomauno COMA IDENTI
                |IDENTI
;

varcomados ::=  varcomados COMA ENTERO
                |ENTERO
;

varcomatres ::= varcomatres COMA simbolo
                |simbolo
;

simbolo ::=     DISTINTO
                |COMILLAD
                |NUMERAL
                |DOLAR
                |PORCENTAJE
                |AMPERSAND
                |COMILLAS
                |PARIZQ
                |PARDER
                |CEROOUNA
                |UNOOMAS
                |COMA
                |GUION
                |CONCA
                |BARRA
                |DOSPUNTOS
                |PTOCOMA
                |MENOR
                |MAYOR
                |IGUAL
                |CEROOMAS
                |ARROBA
                |CORIZQ
                |CORDER
                |BARRAINV
                |ELEVADO
                |GUIONBAJO
                |ACENTO
                |LLAVEIZQ
                |LLAVEDER
                |DISYUNCION
                
;

exregular ::=   IDENTI FLECHA regular:a PTOCOMA     {:System.out.println("el valor de la expresion es: "+ a);:}
;

regular ::=     regular:b expresion:a               {: RESULT = b.toString() + a.toString(); :}         
                |CEROOUNA:val                   {: RESULT = val.toString(); :}
                |UNOOMAS:val                    {: RESULT = val.toString(); :}
                |CONCA:val                      {: RESULT = val.toString(); :}
                |DISYUNCION:val                 {: RESULT = val.toString(); :}
                |PARIZQ IDENTI:val PARDER       {: RESULT = "("+val.toString()+")"; :}
                |CADENA:val                     {: RESULT = val.toString(); :}
                |GUIONBAJO:val                  {: RESULT = val.toString(); :}
                |CEROOMAS:val                   {: RESULT = val.toString(); :}
                |IDENTI:val                     {: RESULT = val.toString(); :}
;

expresion ::=   CEROOUNA:val                    {: RESULT = val.toString(); :}
                |UNOOMAS:val                    {: RESULT = val.toString(); :} 
                |CONCA:val                      {: RESULT = val.toString(); :}
                |DISYUNCION:val                 {: RESULT = val.toString(); :}
                |PARIZQ IDENTI:val PARDER       {: RESULT = "("+val.toString()+")"; :}
                |CADENA:val                     {: RESULT = val.toString(); :}
                |GUIONBAJO:val                  {: RESULT = val.toString(); :}
                |CEROOMAS:val                   {: RESULT = val.toString(); :}
                |IDENTI:val                     {: RESULT = val.toString(); :}
;                
